{#
/**
 * @file
 * Theme override to display a menu.
 *
 * Available variables:
 * - menu_name: The machine name of the menu.
 * - items: A nested list of menu items. Each menu item contains:
 *   - attributes: HTML attributes for the menu item.
 *   - below: The menu item child items.
 *   - title: The menu link title.
 *   - url: The menu link url, instance of \Drupal\Core\Url
 *   - localized_options: Menu link localized options.
 *   - is_expanded: TRUE if the link has visible children within the current
 *     menu tree.
 *   - is_collapsed: TRUE if the link has children within the current menu tree
 *     that are not currently visible.
 *   - in_active_trail: TRUE if the link is in the active trail.
 */
#}
{% import _self as menus %}

{#
  We call a macro which calls itself to render the full tree.
  @see http://twig.sensiolabs.org/doc/tags/macro.html
#}
<button class="megamenu-toggle au-main-nav__toggle" aria-expanded="false" aria-pressed="false">
  <span>Menu</span>
</button>

{{ menus.menu_links(items, attributes, 0, main_nav_style) }}

{% macro menu_links(items, attributes, menu_level, main_nav_style) %}
  {% import _self as menus %}
  {% if items %}
    {% if menu_level == 0 %}
      <ul{{ attributes.addClass('au-link-list') }}>
    {% else %}
      <ul class="sub-nav__menu sub-nav__menu-{{ menu_level }}">
    {% endif %}

    {% for item in items %}
      {%
        set classes = [
        'menu-item',
        item.is_expanded ? 'menu-item--expanded',
        item.is_collapsed ? 'menu-item--collapsed',
        item.in_active_trail ? 'menu-item--active-trail',
        item.below and menu_level == 0 ? 'nav-item',
        menu_level == 1 ? 'sub-nav__group',
      ]
      %}

      {% set link_attributes = create_attribute() %}
      {%
        set link_classes = [
        item.in_active_trail ? 'is-active',
      ]
      %}

      {# Add the colour according to theme settings. #}
      {% set subnav_attributes = create_attribute() %}
      {%
        set subnav_classes = [
        'sub-nav',
        main_nav_style ? main_nav_style,
        main_nav_style ? 'au-body',
      ]
      %}

      <li{{ item.attributes.addClass(classes) }}>
        {#/ If item is in first level or does not have description print it plain. #}
        {% if menu_level == 0 or not item.original_link.pluginDefinition.description %}
          {{ link(item.title, item.url, link_attributes.setAttribute('aria-expanded', 'false')) }}
        {% else %}
          {#/ Print item with its description. #}
          <span class="menu-item--has-description">
          {{ link(item.title, item.url) }}
            <p class="menu-item__description">{{ item.original_link.pluginDefinition.description }}</p>
           </span>
        {% endif %}

        {# If item has childrens. #}
        {% if item.below %}
        {#/ If item is in first level or does not have description print it plain. #}
          {% if menu_level == 0 %}
            {% if not item.original_link.pluginDefinition.description %}
              <div{{ subnav_attributes.addClass(subnav_classes) }}>
                <h2 class='sub-nav__title'>
                  {{ link(item.title, item.url, link_attributes.addClass('au-cta-link')) }}
                </h2>
            {% else %}
            {#/ Print item with its description. #}
              <div{{ subnav_attributes.addClass(subnav_classes) }}>
                <span class="sub-nav__title--has-description">
                  <h2 class='sub-nav__title'>
                    {{ link(item.title, item.url, link_attributes.addClass('au-cta-link')) }}
                  </h2>
                  <p class="sub-nav__title__description">{{ item.original_link.pluginDefinition.description }}</p>
                </span>
            {% endif %}
              {{ menus.menu_links(item.below, attributes, menu_level + 1) }}
              </div>
          {% else %}
            {{ menus.menu_links(item.below, attributes, menu_level + 1) }}
          {% endif %}
        {% endif %}
      </li>
    {% endfor %}
  </ul>
  {% endif %}
{% endmacro %}
